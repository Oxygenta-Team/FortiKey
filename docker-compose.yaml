services:
  zookeeper:
    image: zookeeper:3.9.0
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: bitnami/kafka:3.7.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_MESSAGE_MAX_BYTES: 104857600
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CREATE_TOPICS: "cipher-updates:1:1"

  cipher:
    build:
      context: .
      dockerfile: ./cmd/cipher/Dockerfile
    tty: true
    volumes:
      - ./cmd/cipher/config.yaml:/configs/config.yaml:ro
    command:
      - -config-path
      - /configs/config.yaml
    ports:
      - 3307:3307

  cipher-postgres:
    image: postgres:16.7-alpine3.20
    container_name: cipher-postgres
    restart: on-failure:5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_SSL_MODE: disable
    ports:
      - 5431:5432

  user_db:
    image: postgres:16.7-alpine3.20
    container_name: user-management-postgres
    restart: on-failure:5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydb
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_SSL_MODE: disable
    ports:
      -  5432:5432